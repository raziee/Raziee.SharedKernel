name: Build, Test and Publish NuGet Package

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

env:
  DOTNET_VERSION: '8.0.x'
  PACKAGE_NAME: 'Raziee.SharedKernel'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for SourceLink to work properly
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory TestResults --collect:"XPlat Code Coverage" --logger trx --results-directory TestResults
    
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: '**/TestResults/**/*.trx'
        reporter: dotnet-trx
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: success()
      continue-on-error: true
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  pack:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Extract version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"
    
    - name: Update version in project file
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.get_version.outputs.VERSION }}<\/Version>/g" src/Raziee.SharedKernel/Raziee.SharedKernel.csproj
    
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory TestResults
    
    - name: Pack NuGet package
      run: dotnet pack src/Raziee.SharedKernel/Raziee.SharedKernel.csproj --configuration Release --no-build --output ./artifacts
    
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts/*.nupkg

  publish:
    needs: pack
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download package artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts
    
    - name: Publish to NuGet.org
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          
          This release includes the latest version of Raziee.SharedKernel.
          
          ### Features
          - Comprehensive DDD foundation library
          - CQRS pattern implementation
          - Repository pattern with Entity Framework support
          - Domain events and event dispatching
          - Specification pattern
          - Unit of Work pattern
          - Multi-tenancy support
          - Modular monolith architecture support
          
          ### Installation
          ```bash
          dotnet add package Raziee.SharedKernel
          ```
          
          ### Documentation
          - [Getting Started Guide](https://github.com/raziee/Raziee.SharedKernel/blob/main/docs/getting-started.md)
          - [Architecture Documentation](https://github.com/raziee/Raziee.SharedKernel/blob/main/docs/architecture.md)
          - [API Documentation](https://github.com/raziee/Raziee.SharedKernel)
        draft: false
        prerelease: false
        files: ./artifacts/*.nupkg
